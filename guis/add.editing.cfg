// init vars
	//menu vars
menurowsactive = "info"

menu1infoactive = ""
menu1testactive = ""
	//vars
detectedaction = ""

// commands (cmd)
bordertabbutton = [//$arg1 = name; $arg2 = buttonaction; $arg3 = 0 (horiz), = 1 (vertic), $arg4 = buttonfontsize
	if (=s $menurowsactive $arg1) [
		bordertabbuttoncolour = "0xFFFFFF"
		actguibordercol = "0xFFFFFF"
	][
		bordertabbuttoncolour = "0x808080"
		actguibordercol = "0x000000"
	]
	if (&& (=s $detectedaction $arg2) (!=s $menurowsactive $arg1)) [//if the button is rollovered
		actguibordercol = "0xFF0000"
	]
	guilist [ guifont $arg4 [
		guibackground $guifieldbgcolour $guifieldbgblend $actguibordercol $guifieldborderblend 1
		if $arg3 [//button horizontal
			guistrut 0.4
			guilist [
				guistrut 0.1
				if (=s $menurowsactive $arg1) [//when button active nohitguifx
					guinohitfx [
						guibutton $arg1 $arg2 [] [] $bordertabbuttoncolour
					]
				][
					guibutton $arg1 $arg2 [] [] $bordertabbuttoncolour
				]
				guistrut 0.1
			]
			guistrut 0.4
		][//button vertical
			guilist [
				guistrut 0.4
				guilist [
					guistrut 0.1
				if (=s $menurowsactive $arg1) [//when button active nohitguifx
					guinohitfx [
						guibutton $arg1 $arg2 [] [] $bordertabbuttoncolour
					]
				][
					guibutton $arg1 $arg2 [] [] $bordertabbuttoncolour
				]
					guistrut 0.1
				]
				guistrut 0.4
			]
		]
	] ]
]
bordertabbuttonrollover_test = [//test if you onhover over the bordertabbuttons
	if $guirolloveraction [
		detectedaction = $guirolloveraction
		buttonsrollover_count = (+ $guipasses 2)
	][
		if (= $buttonsrollover_count $guipasses)[//deletes only after two no guirolloveractions behind
			detectedaction = ""
			buttonsrollover_count = (+ $guipasses 2)
		]
	]
]
guibodun = [//$arg1 = name; $arg2 = action; $arg3 = alt-act; $arg4 =  icon; $arg5 = colour; $arg6 = onhover
	guibody [
		guibutton $arg1 $arg2 $arg3 $arg4 $arg5
	] [] [] $arg6
]
			//for using the inputgui use this schema: (<what to do with the result of inputgui> (inputgui <header message> <which var should be changed> <ok button execute> <guistatus msg>) )
			//WARNING! Ok Button needs in the action even the cleargui 1
inputgui = [//$arg1 = header message; $arg2 = input var; $arg3 = what to do when you want to change it; $arg4 = Cancel Button; $arg4 = special message, e.g. hints; result = when ok the written content
	input_temp_var = $arg2
	inputgui_prev = $$arg2// content of the var/cmd
	inputgui_result = ""
	inputgui_exec = $arg3//content will execute when pressing ok
	input_temp_msg = $arg4
	newgui input_gui [
		guiheader @arg1
		guitext (format "^fwCurrent: ^fC%1" $inputgui_prev) [] [] [] [5000]
		guistrut 0.5
		guicenter [
			guifield inputgui_result -30 [] [0xFFFFFF] [0] [] [] ""
		]
		guistrut 0.5
		guicenter [ guifont "command" [
			guibutton "^fgOK" [
				(inputgui_exec)
			]
			guistrut 3
			guibutton "^frCancel" [cleargui 1]
		]]
		if $input_temp_msg [
			guifont "little" [
				guistatus $input_temp_msg [1000]
			]
		]
	]
	showgui input_gui
]
dectohex = [//$arg1 = decimal number; result = hex number
	intres_temp = $arg1
	dectohex_result = ""
	while [!= $intres_temp 0] [
		addhex_temp = (mod $intres_temp 16)
		if (> $addhex_temp 9) [
			case ($addhex_temp
				) 10 [ addhex_temp = "A"
				] 11 [ addhex_temp = "B"
				] 12 [ addhex_temp = "C"
				] 13 [ addhex_temp = "D"
				] 14 [ addhex_temp = "E"
				] 15 [ addhex_temp = "F"
			]
		]
		dectohex_result = (concatword $addhex_temp $dectohex_result)
		intres_temp = (div $intres_temp 16)
	]
	result $dectohex_result
]

// gui tabs
menu1_info = [
	guistatus_msg = "Map main menu - info"
	guilist [
		if $maptitle [
			guibutton $maptitle [(inputgui "Set mapname" maptitle [maptitle $inputgui_result; cleargui 1])] [] [] [0xC0C0C0]//inputgui: cmd
		][
			guibutton "<Name>" [(inputgui "Set mapname" maptitle [maptitle $inputgui_result; cleargui 1])] [] [] [0xC0C0C0]//inputgui: cmd
		]
		guitext "^fw created by "
		if $mapauthor [
			guibutton $mapauthor [(inputgui "Set mapauthor" mapauthor [mapauthor $inputgui_result; cleargui 1])]  [] [] [0xC0C0C0]//inputgui: cmd
		][
			guibutton "<Name>" [(inputgui "Set mapauthor" mapauthor [mapauthor $inputgui_result; cleargui 1])] [] [] [0xC0C0C0]//inputgui: cmd
		]
	]
	guilist [
		guilist [
			guitext (format "^fwRevision: ^fa%1" (maprevision))
			guitext (format "^fwSize: ^fa%1" (mapsize))
			guilist [
				guitext "^fwFile: "
				guibutton $mapname [
					(inputgui "Set mapfile" mapname [//inputgui: cmd
						inputgui_result = (stringreplace $inputgui_result " " "_")//prevent spaces in the name
						if $inputgui_result [
							if (= (stringstr $inputgui_result "/") -1) [//when no subfolder is found
								(mapname (concatword "maps/" $inputgui_result))
							][
								(mapname $inputgui_result)
							]
						][
							newgui info [guiheader "info"; guione [ guitext "No path given. ^frNothing^fw changed..." ] ]; showgui info
							sleep 2000 [cleargui 2]
						]
					] "The map will be saved in the user directory. For sub folder use this schema: folder/folder/.../mapfilename^nIf no folder is given it will be saved under maps/")
					showgui input_gui
				] [] [] [0xC0C0C0]
			]
			guitext (format "^fwVersion: ^fa%1" (mapversion))
		]
		guistrut 3
		guilist [
			guistrut 1
			guibody [
				guiimage (format "%1.png" $mapname) [] [4] [0]
			] [cleargui; savemapshot (format "%1.png" $mapname); showgui editing_gui] [] [guistatus_msg = "click to make a new mapshot"]
		]
	]
]
menu1_save = [
	guistatus_msg = "Saving settings and others"
	guibodun "^faSave map" [savemap] [] [] [] [guistatus_msg = "Saves the map."]
	guibodun "^faSave map with waypoints" [savemap; savewaypoints] [] [] [] [guistatus_msg = "Saves the map with waypoints."]
	guibodun "^faSave waypoints" [savewaypoints] [] [] [] [guistatus_msg = "Saves only the waypoints."]
]

mapedit_tab = [
	guistayopen [
		guilist [//first menu row
			//guibackground 0x707070 $guifieldbgblend $guibordercolour $guifieldborderblend 1
			guistrut 0.6
			guilist [
				guistrut 0.4
				guilist [
					bordertabbutton "info" [menurowsactive = "info"] 0 "command"//cmd
					guistrut 0.5
					bordertabbutton "save" [menurowsactive = "save"] 0 "command"//cmd
				]
				bordertabbuttonrollover_test	//cmd; when roll over the border gets red of the borderbuttons
				guistrut 0.4
			]
			guistrut 0.6
		]
		guistrut 0.2
		
		guibar 0xFFFFFF
		((format "menu1_%1" $menurowsactive)) //cexecutes the choosen menu
	]
	guistatus $guistatus_msg
] 
//~~~~~~~~~~~~~~~~~~
another_tab_tab = [

]

// gui structure
newgui editing_gui [
	guiheader "map"
		[mapedit_tab]
	guitab "anothzer tab"
		[another_tab_tab]
]

// do
showgui editing_gui